services:
  backend:
    env_file:
      - .env
    volumes:
      - ./.env:/usr/mount.d/.env
    build:
      context: ./src
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    depends_on:
      - database
    environment:
      - DB_HOST=database
      - DB_PORT=5432
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    container_name: area-backend

  database:
    env_file:
      - .env
    image: postgres
    container_name: area-database
    ports:
      - "${DB_PORT}:5432"
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - ./database/setup.sql:/docker-entrypoint-initdb.d/setup.sql
    
  service-discord:
    env_file:
      - ./services/discord/.env
    volumes:
      - ./services/discord/.env:/usr/mount.d/.env
    container_name: area-service-discord
    build:
      context: ./services/discord
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.discord.rule=PathPrefix(`/service/discord/`)"
      - "traefik.http.services.discord.loadbalancer.server.port=80"
      - "traefik.http.routers.discord.middlewares=stripprefix-service-discord"
      - "traefik.http.middlewares.stripprefix-service-discord.stripprefix.prefixes=/service/discord"
    networks:
      - web

  area-traefik:
    image: traefik:v3.2
    container_name: traefik
    command:
      # - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:${TRAEFIK_PORT}"
    ports:
      - "${TRAEFIK_PORT}:${TRAEFIK_PORT}"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - web

networks:
  web:
    external: false

